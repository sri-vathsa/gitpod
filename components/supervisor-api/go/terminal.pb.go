// Copyright (c) 2021 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: terminal.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TerminalSize struct {
	Rows                 uint32   `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols                 uint32   `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
	WidthPx              uint32   `protobuf:"varint,3,opt,name=widthPx,proto3" json:"widthPx,omitempty"`
	HeightPx             uint32   `protobuf:"varint,4,opt,name=heightPx,proto3" json:"heightPx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminalSize) Reset()         { *m = TerminalSize{} }
func (m *TerminalSize) String() string { return proto.CompactTextString(m) }
func (*TerminalSize) ProtoMessage()    {}
func (*TerminalSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{0}
}

func (m *TerminalSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminalSize.Unmarshal(m, b)
}
func (m *TerminalSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminalSize.Marshal(b, m, deterministic)
}
func (m *TerminalSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminalSize.Merge(m, src)
}
func (m *TerminalSize) XXX_Size() int {
	return xxx_messageInfo_TerminalSize.Size(m)
}
func (m *TerminalSize) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminalSize.DiscardUnknown(m)
}

var xxx_messageInfo_TerminalSize proto.InternalMessageInfo

func (m *TerminalSize) GetRows() uint32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *TerminalSize) GetCols() uint32 {
	if m != nil {
		return m.Cols
	}
	return 0
}

func (m *TerminalSize) GetWidthPx() uint32 {
	if m != nil {
		return m.WidthPx
	}
	return 0
}

func (m *TerminalSize) GetHeightPx() uint32 {
	if m != nil {
		return m.HeightPx
	}
	return 0
}

type OpenTerminalRequest struct {
	Workdir              string            `protobuf:"bytes,1,opt,name=workdir,proto3" json:"workdir,omitempty"`
	Env                  map[string]string `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Shell                string            `protobuf:"bytes,4,opt,name=shell,proto3" json:"shell,omitempty"`
	ShellArgs            []string          `protobuf:"bytes,5,rep,name=shell_args,json=shellArgs,proto3" json:"shell_args,omitempty"`
	Size                 *TerminalSize     `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OpenTerminalRequest) Reset()         { *m = OpenTerminalRequest{} }
func (m *OpenTerminalRequest) String() string { return proto.CompactTextString(m) }
func (*OpenTerminalRequest) ProtoMessage()    {}
func (*OpenTerminalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{1}
}

func (m *OpenTerminalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenTerminalRequest.Unmarshal(m, b)
}
func (m *OpenTerminalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenTerminalRequest.Marshal(b, m, deterministic)
}
func (m *OpenTerminalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenTerminalRequest.Merge(m, src)
}
func (m *OpenTerminalRequest) XXX_Size() int {
	return xxx_messageInfo_OpenTerminalRequest.Size(m)
}
func (m *OpenTerminalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenTerminalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenTerminalRequest proto.InternalMessageInfo

func (m *OpenTerminalRequest) GetWorkdir() string {
	if m != nil {
		return m.Workdir
	}
	return ""
}

func (m *OpenTerminalRequest) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *OpenTerminalRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *OpenTerminalRequest) GetShell() string {
	if m != nil {
		return m.Shell
	}
	return ""
}

func (m *OpenTerminalRequest) GetShellArgs() []string {
	if m != nil {
		return m.ShellArgs
	}
	return nil
}

func (m *OpenTerminalRequest) GetSize() *TerminalSize {
	if m != nil {
		return m.Size
	}
	return nil
}

type OpenTerminalResponse struct {
	Terminal *Terminal `protobuf:"bytes,1,opt,name=terminal,proto3" json:"terminal,omitempty"`
	// starter_token can be used to change the terminal size if there are
	// multiple listerns, without having to force your way in.
	StarterToken         string   `protobuf:"bytes,2,opt,name=starter_token,json=starterToken,proto3" json:"starter_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenTerminalResponse) Reset()         { *m = OpenTerminalResponse{} }
func (m *OpenTerminalResponse) String() string { return proto.CompactTextString(m) }
func (*OpenTerminalResponse) ProtoMessage()    {}
func (*OpenTerminalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{2}
}

func (m *OpenTerminalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenTerminalResponse.Unmarshal(m, b)
}
func (m *OpenTerminalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenTerminalResponse.Marshal(b, m, deterministic)
}
func (m *OpenTerminalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenTerminalResponse.Merge(m, src)
}
func (m *OpenTerminalResponse) XXX_Size() int {
	return xxx_messageInfo_OpenTerminalResponse.Size(m)
}
func (m *OpenTerminalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenTerminalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenTerminalResponse proto.InternalMessageInfo

func (m *OpenTerminalResponse) GetTerminal() *Terminal {
	if m != nil {
		return m.Terminal
	}
	return nil
}

func (m *OpenTerminalResponse) GetStarterToken() string {
	if m != nil {
		return m.StarterToken
	}
	return ""
}

type ShutdownTerminalRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownTerminalRequest) Reset()         { *m = ShutdownTerminalRequest{} }
func (m *ShutdownTerminalRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownTerminalRequest) ProtoMessage()    {}
func (*ShutdownTerminalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{3}
}

func (m *ShutdownTerminalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownTerminalRequest.Unmarshal(m, b)
}
func (m *ShutdownTerminalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownTerminalRequest.Marshal(b, m, deterministic)
}
func (m *ShutdownTerminalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownTerminalRequest.Merge(m, src)
}
func (m *ShutdownTerminalRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownTerminalRequest.Size(m)
}
func (m *ShutdownTerminalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownTerminalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownTerminalRequest proto.InternalMessageInfo

func (m *ShutdownTerminalRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type ShutdownTerminalResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownTerminalResponse) Reset()         { *m = ShutdownTerminalResponse{} }
func (m *ShutdownTerminalResponse) String() string { return proto.CompactTextString(m) }
func (*ShutdownTerminalResponse) ProtoMessage()    {}
func (*ShutdownTerminalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{4}
}

func (m *ShutdownTerminalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownTerminalResponse.Unmarshal(m, b)
}
func (m *ShutdownTerminalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownTerminalResponse.Marshal(b, m, deterministic)
}
func (m *ShutdownTerminalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownTerminalResponse.Merge(m, src)
}
func (m *ShutdownTerminalResponse) XXX_Size() int {
	return xxx_messageInfo_ShutdownTerminalResponse.Size(m)
}
func (m *ShutdownTerminalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownTerminalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownTerminalResponse proto.InternalMessageInfo

type Terminal struct {
	Alias                string            `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Command              []string          `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	Title                string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Pid                  int64             `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	InitialWorkdir       string            `protobuf:"bytes,5,opt,name=initial_workdir,json=initialWorkdir,proto3" json:"initial_workdir,omitempty"`
	CurrentWorkdir       string            `protobuf:"bytes,6,opt,name=current_workdir,json=currentWorkdir,proto3" json:"current_workdir,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Terminal) Reset()         { *m = Terminal{} }
func (m *Terminal) String() string { return proto.CompactTextString(m) }
func (*Terminal) ProtoMessage()    {}
func (*Terminal) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{5}
}

func (m *Terminal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Terminal.Unmarshal(m, b)
}
func (m *Terminal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Terminal.Marshal(b, m, deterministic)
}
func (m *Terminal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Terminal.Merge(m, src)
}
func (m *Terminal) XXX_Size() int {
	return xxx_messageInfo_Terminal.Size(m)
}
func (m *Terminal) XXX_DiscardUnknown() {
	xxx_messageInfo_Terminal.DiscardUnknown(m)
}

var xxx_messageInfo_Terminal proto.InternalMessageInfo

func (m *Terminal) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *Terminal) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Terminal) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Terminal) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Terminal) GetInitialWorkdir() string {
	if m != nil {
		return m.InitialWorkdir
	}
	return ""
}

func (m *Terminal) GetCurrentWorkdir() string {
	if m != nil {
		return m.CurrentWorkdir
	}
	return ""
}

func (m *Terminal) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type GetTerminalRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTerminalRequest) Reset()         { *m = GetTerminalRequest{} }
func (m *GetTerminalRequest) String() string { return proto.CompactTextString(m) }
func (*GetTerminalRequest) ProtoMessage()    {}
func (*GetTerminalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{6}
}

func (m *GetTerminalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTerminalRequest.Unmarshal(m, b)
}
func (m *GetTerminalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTerminalRequest.Marshal(b, m, deterministic)
}
func (m *GetTerminalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTerminalRequest.Merge(m, src)
}
func (m *GetTerminalRequest) XXX_Size() int {
	return xxx_messageInfo_GetTerminalRequest.Size(m)
}
func (m *GetTerminalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTerminalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTerminalRequest proto.InternalMessageInfo

func (m *GetTerminalRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type ListTerminalsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTerminalsRequest) Reset()         { *m = ListTerminalsRequest{} }
func (m *ListTerminalsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTerminalsRequest) ProtoMessage()    {}
func (*ListTerminalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{7}
}

func (m *ListTerminalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTerminalsRequest.Unmarshal(m, b)
}
func (m *ListTerminalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTerminalsRequest.Marshal(b, m, deterministic)
}
func (m *ListTerminalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTerminalsRequest.Merge(m, src)
}
func (m *ListTerminalsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTerminalsRequest.Size(m)
}
func (m *ListTerminalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTerminalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTerminalsRequest proto.InternalMessageInfo

type ListTerminalsResponse struct {
	Terminals            []*Terminal `protobuf:"bytes,1,rep,name=terminals,proto3" json:"terminals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListTerminalsResponse) Reset()         { *m = ListTerminalsResponse{} }
func (m *ListTerminalsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTerminalsResponse) ProtoMessage()    {}
func (*ListTerminalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{8}
}

func (m *ListTerminalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTerminalsResponse.Unmarshal(m, b)
}
func (m *ListTerminalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTerminalsResponse.Marshal(b, m, deterministic)
}
func (m *ListTerminalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTerminalsResponse.Merge(m, src)
}
func (m *ListTerminalsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTerminalsResponse.Size(m)
}
func (m *ListTerminalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTerminalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTerminalsResponse proto.InternalMessageInfo

func (m *ListTerminalsResponse) GetTerminals() []*Terminal {
	if m != nil {
		return m.Terminals
	}
	return nil
}

type ListenTerminalRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenTerminalRequest) Reset()         { *m = ListenTerminalRequest{} }
func (m *ListenTerminalRequest) String() string { return proto.CompactTextString(m) }
func (*ListenTerminalRequest) ProtoMessage()    {}
func (*ListenTerminalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{9}
}

func (m *ListenTerminalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenTerminalRequest.Unmarshal(m, b)
}
func (m *ListenTerminalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenTerminalRequest.Marshal(b, m, deterministic)
}
func (m *ListenTerminalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenTerminalRequest.Merge(m, src)
}
func (m *ListenTerminalRequest) XXX_Size() int {
	return xxx_messageInfo_ListenTerminalRequest.Size(m)
}
func (m *ListenTerminalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenTerminalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenTerminalRequest proto.InternalMessageInfo

func (m *ListenTerminalRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type ListenTerminalResponse struct {
	// Types that are valid to be assigned to Output:
	//	*ListenTerminalResponse_Data
	//	*ListenTerminalResponse_ExitCode
	//	*ListenTerminalResponse_Title
	Output               isListenTerminalResponse_Output `protobuf_oneof:"output"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ListenTerminalResponse) Reset()         { *m = ListenTerminalResponse{} }
func (m *ListenTerminalResponse) String() string { return proto.CompactTextString(m) }
func (*ListenTerminalResponse) ProtoMessage()    {}
func (*ListenTerminalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{10}
}

func (m *ListenTerminalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenTerminalResponse.Unmarshal(m, b)
}
func (m *ListenTerminalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenTerminalResponse.Marshal(b, m, deterministic)
}
func (m *ListenTerminalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenTerminalResponse.Merge(m, src)
}
func (m *ListenTerminalResponse) XXX_Size() int {
	return xxx_messageInfo_ListenTerminalResponse.Size(m)
}
func (m *ListenTerminalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenTerminalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListenTerminalResponse proto.InternalMessageInfo

type isListenTerminalResponse_Output interface {
	isListenTerminalResponse_Output()
}

type ListenTerminalResponse_Data struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type ListenTerminalResponse_ExitCode struct {
	ExitCode int32 `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3,oneof"`
}

type ListenTerminalResponse_Title struct {
	Title string `protobuf:"bytes,3,opt,name=title,proto3,oneof"`
}

func (*ListenTerminalResponse_Data) isListenTerminalResponse_Output() {}

func (*ListenTerminalResponse_ExitCode) isListenTerminalResponse_Output() {}

func (*ListenTerminalResponse_Title) isListenTerminalResponse_Output() {}

func (m *ListenTerminalResponse) GetOutput() isListenTerminalResponse_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *ListenTerminalResponse) GetData() []byte {
	if x, ok := m.GetOutput().(*ListenTerminalResponse_Data); ok {
		return x.Data
	}
	return nil
}

func (m *ListenTerminalResponse) GetExitCode() int32 {
	if x, ok := m.GetOutput().(*ListenTerminalResponse_ExitCode); ok {
		return x.ExitCode
	}
	return 0
}

func (m *ListenTerminalResponse) GetTitle() string {
	if x, ok := m.GetOutput().(*ListenTerminalResponse_Title); ok {
		return x.Title
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListenTerminalResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListenTerminalResponse_Data)(nil),
		(*ListenTerminalResponse_ExitCode)(nil),
		(*ListenTerminalResponse_Title)(nil),
	}
}

type WriteTerminalRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Stdin                []byte   `protobuf:"bytes,2,opt,name=stdin,proto3" json:"stdin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteTerminalRequest) Reset()         { *m = WriteTerminalRequest{} }
func (m *WriteTerminalRequest) String() string { return proto.CompactTextString(m) }
func (*WriteTerminalRequest) ProtoMessage()    {}
func (*WriteTerminalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{11}
}

func (m *WriteTerminalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTerminalRequest.Unmarshal(m, b)
}
func (m *WriteTerminalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTerminalRequest.Marshal(b, m, deterministic)
}
func (m *WriteTerminalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTerminalRequest.Merge(m, src)
}
func (m *WriteTerminalRequest) XXX_Size() int {
	return xxx_messageInfo_WriteTerminalRequest.Size(m)
}
func (m *WriteTerminalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTerminalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTerminalRequest proto.InternalMessageInfo

func (m *WriteTerminalRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *WriteTerminalRequest) GetStdin() []byte {
	if m != nil {
		return m.Stdin
	}
	return nil
}

type WriteTerminalResponse struct {
	BytesWritten         uint32   `protobuf:"varint,1,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteTerminalResponse) Reset()         { *m = WriteTerminalResponse{} }
func (m *WriteTerminalResponse) String() string { return proto.CompactTextString(m) }
func (*WriteTerminalResponse) ProtoMessage()    {}
func (*WriteTerminalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{12}
}

func (m *WriteTerminalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTerminalResponse.Unmarshal(m, b)
}
func (m *WriteTerminalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTerminalResponse.Marshal(b, m, deterministic)
}
func (m *WriteTerminalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTerminalResponse.Merge(m, src)
}
func (m *WriteTerminalResponse) XXX_Size() int {
	return xxx_messageInfo_WriteTerminalResponse.Size(m)
}
func (m *WriteTerminalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTerminalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTerminalResponse proto.InternalMessageInfo

func (m *WriteTerminalResponse) GetBytesWritten() uint32 {
	if m != nil {
		return m.BytesWritten
	}
	return 0
}

type SetTerminalSizeRequest struct {
	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	// token is the starter_token that Open() returned.
	// Without token it's possible that the request is ignored.
	// If you want to force your size, indendently of all other listener,
	// use force.
	//
	// Types that are valid to be assigned to Priority:
	//	*SetTerminalSizeRequest_Token
	//	*SetTerminalSizeRequest_Force
	Priority             isSetTerminalSizeRequest_Priority `protobuf_oneof:"priority"`
	Size                 *TerminalSize                     `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SetTerminalSizeRequest) Reset()         { *m = SetTerminalSizeRequest{} }
func (m *SetTerminalSizeRequest) String() string { return proto.CompactTextString(m) }
func (*SetTerminalSizeRequest) ProtoMessage()    {}
func (*SetTerminalSizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{13}
}

func (m *SetTerminalSizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTerminalSizeRequest.Unmarshal(m, b)
}
func (m *SetTerminalSizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTerminalSizeRequest.Marshal(b, m, deterministic)
}
func (m *SetTerminalSizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTerminalSizeRequest.Merge(m, src)
}
func (m *SetTerminalSizeRequest) XXX_Size() int {
	return xxx_messageInfo_SetTerminalSizeRequest.Size(m)
}
func (m *SetTerminalSizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTerminalSizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTerminalSizeRequest proto.InternalMessageInfo

func (m *SetTerminalSizeRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type isSetTerminalSizeRequest_Priority interface {
	isSetTerminalSizeRequest_Priority()
}

type SetTerminalSizeRequest_Token struct {
	Token string `protobuf:"bytes,2,opt,name=token,proto3,oneof"`
}

type SetTerminalSizeRequest_Force struct {
	Force bool `protobuf:"varint,3,opt,name=force,proto3,oneof"`
}

func (*SetTerminalSizeRequest_Token) isSetTerminalSizeRequest_Priority() {}

func (*SetTerminalSizeRequest_Force) isSetTerminalSizeRequest_Priority() {}

func (m *SetTerminalSizeRequest) GetPriority() isSetTerminalSizeRequest_Priority {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *SetTerminalSizeRequest) GetToken() string {
	if x, ok := m.GetPriority().(*SetTerminalSizeRequest_Token); ok {
		return x.Token
	}
	return ""
}

func (m *SetTerminalSizeRequest) GetForce() bool {
	if x, ok := m.GetPriority().(*SetTerminalSizeRequest_Force); ok {
		return x.Force
	}
	return false
}

func (m *SetTerminalSizeRequest) GetSize() *TerminalSize {
	if m != nil {
		return m.Size
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SetTerminalSizeRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SetTerminalSizeRequest_Token)(nil),
		(*SetTerminalSizeRequest_Force)(nil),
	}
}

type SetTerminalSizeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTerminalSizeResponse) Reset()         { *m = SetTerminalSizeResponse{} }
func (m *SetTerminalSizeResponse) String() string { return proto.CompactTextString(m) }
func (*SetTerminalSizeResponse) ProtoMessage()    {}
func (*SetTerminalSizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8b8260c8ef16ad, []int{14}
}

func (m *SetTerminalSizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTerminalSizeResponse.Unmarshal(m, b)
}
func (m *SetTerminalSizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTerminalSizeResponse.Marshal(b, m, deterministic)
}
func (m *SetTerminalSizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTerminalSizeResponse.Merge(m, src)
}
func (m *SetTerminalSizeResponse) XXX_Size() int {
	return xxx_messageInfo_SetTerminalSizeResponse.Size(m)
}
func (m *SetTerminalSizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTerminalSizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetTerminalSizeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TerminalSize)(nil), "supervisor.TerminalSize")
	proto.RegisterType((*OpenTerminalRequest)(nil), "supervisor.OpenTerminalRequest")
	proto.RegisterMapType((map[string]string)(nil), "supervisor.OpenTerminalRequest.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "supervisor.OpenTerminalRequest.EnvEntry")
	proto.RegisterType((*OpenTerminalResponse)(nil), "supervisor.OpenTerminalResponse")
	proto.RegisterType((*ShutdownTerminalRequest)(nil), "supervisor.ShutdownTerminalRequest")
	proto.RegisterType((*ShutdownTerminalResponse)(nil), "supervisor.ShutdownTerminalResponse")
	proto.RegisterType((*Terminal)(nil), "supervisor.Terminal")
	proto.RegisterMapType((map[string]string)(nil), "supervisor.Terminal.AnnotationsEntry")
	proto.RegisterType((*GetTerminalRequest)(nil), "supervisor.GetTerminalRequest")
	proto.RegisterType((*ListTerminalsRequest)(nil), "supervisor.ListTerminalsRequest")
	proto.RegisterType((*ListTerminalsResponse)(nil), "supervisor.ListTerminalsResponse")
	proto.RegisterType((*ListenTerminalRequest)(nil), "supervisor.ListenTerminalRequest")
	proto.RegisterType((*ListenTerminalResponse)(nil), "supervisor.ListenTerminalResponse")
	proto.RegisterType((*WriteTerminalRequest)(nil), "supervisor.WriteTerminalRequest")
	proto.RegisterType((*WriteTerminalResponse)(nil), "supervisor.WriteTerminalResponse")
	proto.RegisterType((*SetTerminalSizeRequest)(nil), "supervisor.SetTerminalSizeRequest")
	proto.RegisterType((*SetTerminalSizeResponse)(nil), "supervisor.SetTerminalSizeResponse")
}

func init() {
	proto.RegisterFile("terminal.proto", fileDescriptor_ff8b8260c8ef16ad)
}

var fileDescriptor_ff8b8260c8ef16ad = []byte{
	// 921 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0x8e, 0xbd, 0xb6, 0xb3, 0x7b, 0xe2, 0x34, 0x65, 0xea, 0xa6, 0xdb, 0xa5, 0xa1, 0x66, 0x4d,
	0x55, 0x0b, 0x81, 0x1d, 0x8c, 0x84, 0x50, 0x41, 0x48, 0x0d, 0xaa, 0x12, 0xa9, 0x48, 0x54, 0x9b,
	0x48, 0x91, 0x90, 0x90, 0xb5, 0xf5, 0x4e, 0xed, 0x51, 0x36, 0x3b, 0xcb, 0xcc, 0xd8, 0x49, 0x0a,
	0xdc, 0xf0, 0x0a, 0xdc, 0x20, 0xde, 0x85, 0xa7, 0xe0, 0x11, 0xe0, 0x41, 0xd0, 0xfc, 0xec, 0xda,
	0x1b, 0x6f, 0x1c, 0xa3, 0xde, 0xcd, 0x39, 0xfb, 0xcd, 0x77, 0x7e, 0xe6, 0x3b, 0x47, 0x0b, 0x77,
	0x04, 0x66, 0xe7, 0x24, 0x09, 0xe3, 0x5e, 0xca, 0xa8, 0xa0, 0x08, 0xf8, 0x34, 0xc5, 0x6c, 0x46,
	0x38, 0x65, 0xde, 0xa3, 0x31, 0xa5, 0xe3, 0x18, 0xf7, 0xc3, 0x94, 0xf4, 0xc3, 0x24, 0xa1, 0x22,
	0x14, 0x84, 0x26, 0x5c, 0x23, 0xfd, 0x18, 0x9a, 0x27, 0xe6, 0xee, 0x31, 0x79, 0x8b, 0x11, 0x82,
	0x1a, 0xa3, 0x17, 0xdc, 0xad, 0xb4, 0x2b, 0xdd, 0xed, 0x40, 0x9d, 0xa5, 0x6f, 0x44, 0x63, 0xee,
	0x56, 0xb5, 0x4f, 0x9e, 0x91, 0x0b, 0x9b, 0x17, 0x24, 0x12, 0x93, 0x57, 0x97, 0xae, 0xa5, 0xdc,
	0x99, 0x89, 0x3c, 0xb0, 0x27, 0x98, 0x8c, 0x27, 0xe2, 0xd5, 0xa5, 0x5b, 0x53, 0x9f, 0x72, 0xdb,
	0xff, 0xd3, 0x82, 0x7b, 0xdf, 0xa7, 0x38, 0xc9, 0x42, 0x06, 0xf8, 0xa7, 0x29, 0xe6, 0x42, 0xb1,
	0x51, 0x76, 0x16, 0x11, 0xa6, 0x02, 0x3b, 0x41, 0x66, 0xa2, 0x67, 0x60, 0xe1, 0x64, 0xe6, 0x56,
	0xdb, 0x56, 0x77, 0x6b, 0xd0, 0xed, 0xcd, 0xeb, 0xea, 0x95, 0xf0, 0xf4, 0x5e, 0x24, 0xb3, 0x17,
	0x89, 0x60, 0x57, 0x81, 0xbc, 0x84, 0x02, 0xd8, 0x5a, 0x28, 0xd8, 0xb5, 0x14, 0xc7, 0xfe, 0x6d,
	0x1c, 0xcf, 0xe7, 0x57, 0x34, 0xd7, 0x22, 0x09, 0x6a, 0x41, 0x9d, 0x4f, 0x70, 0x1c, 0xab, 0xd2,
	0x9c, 0x40, 0x1b, 0x68, 0x0f, 0x40, 0x1d, 0x86, 0x21, 0x1b, 0x73, 0xb7, 0xde, 0xb6, 0xba, 0x4e,
	0xe0, 0x28, 0xcf, 0x73, 0x36, 0xe6, 0xe8, 0x13, 0xa8, 0x71, 0xf2, 0x16, 0xbb, 0x8d, 0x76, 0xa5,
	0xbb, 0x35, 0x70, 0x17, 0x33, 0x58, 0x6c, 0x7e, 0xa0, 0x50, 0xde, 0x17, 0x60, 0x67, 0x75, 0xa0,
	0xbb, 0x60, 0x9d, 0xe1, 0x2b, 0xd3, 0x14, 0x79, 0x94, 0x09, 0xcc, 0xc2, 0x78, 0x8a, 0xd5, 0x6b,
	0x38, 0x81, 0x36, 0x9e, 0x55, 0xbf, 0xac, 0x78, 0xdf, 0xc0, 0xdd, 0xeb, 0xb9, 0xff, 0x9f, 0xfb,
	0xfe, 0x39, 0xb4, 0x8a, 0xfd, 0xe0, 0x29, 0x4d, 0x38, 0x46, 0xfb, 0x60, 0x67, 0xf2, 0x52, 0x44,
	0x5b, 0x83, 0x56, 0x59, 0x05, 0x41, 0x8e, 0x42, 0x1d, 0xd8, 0xe6, 0x22, 0x64, 0x02, 0xb3, 0xa1,
	0xa0, 0x67, 0x38, 0x31, 0xb1, 0x9a, 0xc6, 0x79, 0x22, 0x7d, 0x7e, 0x1f, 0x1e, 0x1c, 0x4f, 0xa6,
	0x22, 0xa2, 0x17, 0x4b, 0x72, 0x68, 0x41, 0x3d, 0x8c, 0x49, 0xc8, 0x4d, 0xde, 0xda, 0xf0, 0x3d,
	0x70, 0x97, 0x2f, 0xe8, 0x1c, 0xfd, 0xbf, 0xaa, 0x60, 0x67, 0xce, 0xf2, 0xeb, 0x52, 0x63, 0x23,
	0x7a, 0x7e, 0x1e, 0x26, 0x91, 0x52, 0x93, 0x13, 0x64, 0xa6, 0xc4, 0x0b, 0x22, 0x62, 0xac, 0x94,
	0xec, 0x04, 0xda, 0x90, 0xad, 0x4b, 0x49, 0xa4, 0xde, 0xd9, 0x0a, 0xe4, 0x11, 0x3d, 0x85, 0x1d,
	0x92, 0x10, 0x41, 0xc2, 0x78, 0x98, 0xa9, 0xb5, 0xae, 0x6e, 0xdc, 0x31, 0xee, 0x53, 0x23, 0xda,
	0xa7, 0xb0, 0x33, 0x9a, 0x32, 0x86, 0x13, 0x91, 0x03, 0x1b, 0x1a, 0x68, 0xdc, 0x19, 0xf0, 0xb0,
	0xa8, 0xd0, 0x4d, 0xa5, 0xd0, 0x27, 0x65, 0xdd, 0x5d, 0x2d, 0xcb, 0x77, 0x7e, 0xfb, 0x8f, 0x01,
	0x1d, 0x62, 0xb1, 0xde, 0x3b, 0xec, 0x42, 0xeb, 0x3b, 0xc2, 0x73, 0x30, 0x37, 0x68, 0xff, 0x25,
	0xdc, 0xbf, 0xe6, 0x37, 0x02, 0x1a, 0x80, 0x93, 0x49, 0x43, 0x52, 0x59, 0x37, 0x2a, 0x68, 0x0e,
	0xf3, 0x3f, 0xd5, 0x64, 0x78, 0x4d, 0x6d, 0x50, 0xd8, 0xbd, 0x0e, 0x37, 0xc1, 0x5b, 0x50, 0x8b,
	0x42, 0x11, 0x2a, 0x78, 0xf3, 0x68, 0x23, 0x50, 0x16, 0xda, 0x03, 0x07, 0x5f, 0x12, 0x31, 0x1c,
	0xd1, 0x48, 0x77, 0xa3, 0x7e, 0xb4, 0x11, 0xd8, 0xd2, 0xf5, 0x2d, 0x8d, 0x30, 0xda, 0x2d, 0x28,
	0xe2, 0x68, 0xc3, 0x68, 0xe2, 0xc0, 0x86, 0x06, 0x9d, 0x8a, 0x74, 0x2a, 0xfc, 0x03, 0x68, 0x9d,
	0x32, 0x22, 0xf0, 0x5a, 0xe9, 0xa9, 0xad, 0x21, 0x22, 0xa2, 0x07, 0xa1, 0x19, 0x68, 0xc3, 0xff,
	0x1a, 0xee, 0x5f, 0xe3, 0x30, 0x39, 0x77, 0x60, 0xfb, 0xf5, 0x95, 0xc0, 0x7c, 0x78, 0xc1, 0x88,
	0x10, 0x38, 0x31, 0xdb, 0xb8, 0xa9, 0x9c, 0xa7, 0xda, 0xe7, 0xff, 0x51, 0x81, 0xdd, 0xe3, 0xf9,
	0x9b, 0xa9, 0x05, 0xb2, 0x32, 0x09, 0x59, 0xd4, 0x7c, 0x1a, 0x55, 0x51, 0xd2, 0x94, 0xfe, 0x37,
	0x94, 0x8d, 0x74, 0xb1, 0xb6, 0xf4, 0x2b, 0x33, 0xdf, 0x5a, 0xb5, 0x75, 0xb6, 0xd6, 0x01, 0x80,
	0x9d, 0x32, 0x42, 0x19, 0x11, 0x57, 0xfe, 0x43, 0x78, 0xb0, 0x94, 0x99, 0x2e, 0x6d, 0xf0, 0x4f,
	0x1d, 0x76, 0xf2, 0x0f, 0x92, 0x6e, 0x84, 0xd1, 0x4b, 0xa8, 0xc9, 0xc5, 0x83, 0x1e, 0xdf, 0xb2,
	0x9a, 0xbd, 0xf6, 0xcd, 0x00, 0xb3, 0x07, 0x36, 0xd0, 0x2f, 0x60, 0x67, 0x5b, 0x02, 0x75, 0x16,
	0xf1, 0x37, 0x2c, 0x1b, 0xef, 0xa3, 0xd5, 0x20, 0x43, 0xfc, 0xe4, 0xb7, 0xbf, 0xff, 0xfd, 0xbd,
	0xfa, 0x18, 0xed, 0xf5, 0x67, 0x9f, 0xf5, 0x33, 0x99, 0xf6, 0xb9, 0x81, 0xf7, 0x7f, 0x56, 0x2d,
	0xfe, 0x15, 0xfd, 0x08, 0xd6, 0x21, 0x16, 0xe8, 0x83, 0x45, 0xce, 0xe5, 0xc1, 0xf2, 0x4a, 0xe5,
	0xef, 0xb7, 0x55, 0x0c, 0x0f, 0xb9, 0x85, 0x18, 0x63, 0x2c, 0x72, 0xfa, 0x37, 0x50, 0x93, 0x32,
	0x47, 0x85, 0x46, 0x94, 0x0d, 0xa3, 0xf7, 0xe1, 0x0a, 0x84, 0x29, 0xe9, 0xa1, 0x0a, 0x77, 0x0f,
	0xbd, 0x57, 0x08, 0x17, 0x4b, 0xfe, 0x19, 0x34, 0xf4, 0x38, 0xa1, 0x25, 0x9e, 0xe5, 0x57, 0xf1,
	0x57, 0x41, 0x4c, 0xac, 0x8e, 0x8a, 0xb5, 0x87, 0xde, 0x5f, 0x8a, 0x85, 0xf3, 0xe6, 0xed, 0x57,
	0x50, 0x0a, 0x75, 0x35, 0x11, 0xc5, 0x02, 0xcb, 0x06, 0xad, 0x58, 0x60, 0xe9, 0x18, 0xf9, 0xbe,
	0x0a, 0xfa, 0xc8, 0xf7, 0x0a, 0x41, 0xe5, 0x4c, 0xe1, 0xbc, 0xa3, 0x27, 0xb0, 0x79, 0x8c, 0x85,
	0xfa, 0xf5, 0x29, 0xd4, 0x51, 0x3e, 0x59, 0x5e, 0x67, 0x25, 0x26, 0x13, 0xe1, 0xc1, 0xe6, 0x0f,
	0xf5, 0xde, 0x57, 0x61, 0x4a, 0x5e, 0x37, 0xd4, 0x5f, 0xd6, 0xe7, 0xff, 0x05, 0x00, 0x00, 0xff,
	0xff, 0x13, 0x83, 0xe3, 0x74, 0xa1, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TerminalServiceClient is the client API for TerminalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TerminalServiceClient interface {
	// Open opens a new terminal running the login shell
	Open(ctx context.Context, in *OpenTerminalRequest, opts ...grpc.CallOption) (*OpenTerminalResponse, error)
	// Shutdown closes a terminal for the given alias, SIGKILL'ing all child processes
	// before closing the pseudo-terminal.
	Shutdown(ctx context.Context, in *ShutdownTerminalRequest, opts ...grpc.CallOption) (*ShutdownTerminalResponse, error)
	// Get returns an opened terminal info
	Get(ctx context.Context, in *GetTerminalRequest, opts ...grpc.CallOption) (*Terminal, error)
	// List lists all open terminals
	List(ctx context.Context, in *ListTerminalsRequest, opts ...grpc.CallOption) (*ListTerminalsResponse, error)
	// Listen listens to a terminal
	Listen(ctx context.Context, in *ListenTerminalRequest, opts ...grpc.CallOption) (TerminalService_ListenClient, error)
	// Write writes to a terminal
	Write(ctx context.Context, in *WriteTerminalRequest, opts ...grpc.CallOption) (*WriteTerminalResponse, error)
	// SetSize sets the terminal's size
	SetSize(ctx context.Context, in *SetTerminalSizeRequest, opts ...grpc.CallOption) (*SetTerminalSizeResponse, error)
}

type terminalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTerminalServiceClient(cc grpc.ClientConnInterface) TerminalServiceClient {
	return &terminalServiceClient{cc}
}

func (c *terminalServiceClient) Open(ctx context.Context, in *OpenTerminalRequest, opts ...grpc.CallOption) (*OpenTerminalResponse, error) {
	out := new(OpenTerminalResponse)
	err := c.cc.Invoke(ctx, "/supervisor.TerminalService/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terminalServiceClient) Shutdown(ctx context.Context, in *ShutdownTerminalRequest, opts ...grpc.CallOption) (*ShutdownTerminalResponse, error) {
	out := new(ShutdownTerminalResponse)
	err := c.cc.Invoke(ctx, "/supervisor.TerminalService/Shutdown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terminalServiceClient) Get(ctx context.Context, in *GetTerminalRequest, opts ...grpc.CallOption) (*Terminal, error) {
	out := new(Terminal)
	err := c.cc.Invoke(ctx, "/supervisor.TerminalService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terminalServiceClient) List(ctx context.Context, in *ListTerminalsRequest, opts ...grpc.CallOption) (*ListTerminalsResponse, error) {
	out := new(ListTerminalsResponse)
	err := c.cc.Invoke(ctx, "/supervisor.TerminalService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terminalServiceClient) Listen(ctx context.Context, in *ListenTerminalRequest, opts ...grpc.CallOption) (TerminalService_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TerminalService_serviceDesc.Streams[0], "/supervisor.TerminalService/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &terminalServiceListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TerminalService_ListenClient interface {
	Recv() (*ListenTerminalResponse, error)
	grpc.ClientStream
}

type terminalServiceListenClient struct {
	grpc.ClientStream
}

func (x *terminalServiceListenClient) Recv() (*ListenTerminalResponse, error) {
	m := new(ListenTerminalResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *terminalServiceClient) Write(ctx context.Context, in *WriteTerminalRequest, opts ...grpc.CallOption) (*WriteTerminalResponse, error) {
	out := new(WriteTerminalResponse)
	err := c.cc.Invoke(ctx, "/supervisor.TerminalService/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terminalServiceClient) SetSize(ctx context.Context, in *SetTerminalSizeRequest, opts ...grpc.CallOption) (*SetTerminalSizeResponse, error) {
	out := new(SetTerminalSizeResponse)
	err := c.cc.Invoke(ctx, "/supervisor.TerminalService/SetSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TerminalServiceServer is the server API for TerminalService service.
type TerminalServiceServer interface {
	// Open opens a new terminal running the login shell
	Open(context.Context, *OpenTerminalRequest) (*OpenTerminalResponse, error)
	// Shutdown closes a terminal for the given alias, SIGKILL'ing all child processes
	// before closing the pseudo-terminal.
	Shutdown(context.Context, *ShutdownTerminalRequest) (*ShutdownTerminalResponse, error)
	// Get returns an opened terminal info
	Get(context.Context, *GetTerminalRequest) (*Terminal, error)
	// List lists all open terminals
	List(context.Context, *ListTerminalsRequest) (*ListTerminalsResponse, error)
	// Listen listens to a terminal
	Listen(*ListenTerminalRequest, TerminalService_ListenServer) error
	// Write writes to a terminal
	Write(context.Context, *WriteTerminalRequest) (*WriteTerminalResponse, error)
	// SetSize sets the terminal's size
	SetSize(context.Context, *SetTerminalSizeRequest) (*SetTerminalSizeResponse, error)
}

// UnimplementedTerminalServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTerminalServiceServer struct {
}

func (*UnimplementedTerminalServiceServer) Open(ctx context.Context, req *OpenTerminalRequest) (*OpenTerminalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}
func (*UnimplementedTerminalServiceServer) Shutdown(ctx context.Context, req *ShutdownTerminalRequest) (*ShutdownTerminalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shutdown not implemented")
}
func (*UnimplementedTerminalServiceServer) Get(ctx context.Context, req *GetTerminalRequest) (*Terminal, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTerminalServiceServer) List(ctx context.Context, req *ListTerminalsRequest) (*ListTerminalsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedTerminalServiceServer) Listen(req *ListenTerminalRequest, srv TerminalService_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}
func (*UnimplementedTerminalServiceServer) Write(ctx context.Context, req *WriteTerminalRequest) (*WriteTerminalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedTerminalServiceServer) SetSize(ctx context.Context, req *SetTerminalSizeRequest) (*SetTerminalSizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSize not implemented")
}

func RegisterTerminalServiceServer(s *grpc.Server, srv TerminalServiceServer) {
	s.RegisterService(&_TerminalService_serviceDesc, srv)
}

func _TerminalService_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenTerminalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServiceServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.TerminalService/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServiceServer).Open(ctx, req.(*OpenTerminalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerminalService_Shutdown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownTerminalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServiceServer).Shutdown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.TerminalService/Shutdown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServiceServer).Shutdown(ctx, req.(*ShutdownTerminalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerminalService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTerminalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.TerminalService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServiceServer).Get(ctx, req.(*GetTerminalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerminalService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTerminalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.TerminalService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServiceServer).List(ctx, req.(*ListTerminalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerminalService_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenTerminalRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TerminalServiceServer).Listen(m, &terminalServiceListenServer{stream})
}

type TerminalService_ListenServer interface {
	Send(*ListenTerminalResponse) error
	grpc.ServerStream
}

type terminalServiceListenServer struct {
	grpc.ServerStream
}

func (x *terminalServiceListenServer) Send(m *ListenTerminalResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _TerminalService_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteTerminalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServiceServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.TerminalService/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServiceServer).Write(ctx, req.(*WriteTerminalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerminalService_SetSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTerminalSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServiceServer).SetSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.TerminalService/SetSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServiceServer).SetSize(ctx, req.(*SetTerminalSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TerminalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "supervisor.TerminalService",
	HandlerType: (*TerminalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Open",
			Handler:    _TerminalService_Open_Handler,
		},
		{
			MethodName: "Shutdown",
			Handler:    _TerminalService_Shutdown_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TerminalService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _TerminalService_List_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _TerminalService_Write_Handler,
		},
		{
			MethodName: "SetSize",
			Handler:    _TerminalService_SetSize_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _TerminalService_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "terminal.proto",
}
